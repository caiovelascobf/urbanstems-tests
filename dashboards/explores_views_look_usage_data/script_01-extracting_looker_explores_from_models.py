"""
Description:
    This script filters explore definitions from a preprocessed LookML mapping CSV,
    originally generated by parsing Looker view and model files. It outputs a new CSV
    containing only explores (i.e., entries from `.model.lkml` files) with selected metadata.

Input:
    - script_01-extracting_looker_tables_from_views_and_models.csv

Output:
    - script_01-extracting_looker_explores_from_models.csv

"""

import csv

INPUT_CSV = r"C:\jobs_repo\brainforge\urbanstems-tests\dashboards\explores_views_data\script_01-extracting_looker_tables_from_views_and_models.csv"
OUTPUT_CSV = "script_01-extracting_looker_explores_from_models.csv"

# Define desired column output in new order
fieldnames = [
    "lkml_file",
    "model_name",
    "explore_name",
    "sql_table_names",
    "derived_table_sources"
]

explore_rows = []

with open(INPUT_CSV, mode="r", encoding="utf-8") as infile:
    reader = csv.DictReader(infile)
    for row in reader:
        if row["lkml_file"].lower().endswith(".model.lkml"):
            explore_rows.append({
                "lkml_file": row["lkml_file"],
                "model_name": row["model_name"],
                "explore_name": row["view_or_model_name"],
                "sql_table_names": row["sql_table_name"],
                "derived_table_sources": row["derived_table_sources"]
            })

with open(OUTPUT_CSV, mode="w", newline="", encoding="utf-8") as outfile:
    writer = csv.DictWriter(outfile, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(explore_rows)

# === SUMMARY ===
print(f"\nâœ… Filtered explore list saved to: {OUTPUT_CSV}")
print(f"ðŸ“„ Total explores written: {len(explore_rows)}")
