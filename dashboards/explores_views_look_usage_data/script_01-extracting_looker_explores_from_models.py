"""
Description:
    This script filters explore definitions from a preprocessed LookML mapping CSV,
    originally generated by parsing Looker view and model files. It outputs a new CSV
    containing only explores (i.e., entries from `.model.lkml` files) with selected metadata.
    It also prints warnings if there are duplicate explore names or (model, explore) pairs.

Input:
    - script_01-extracting_looker_tables_from_views_and_models.csv

Output:
    - script_01-extracting_looker_explores_from_models.csv
"""

import csv
from collections import Counter

INPUT_CSV = r"C:\jobs_repo\brainforge\urbanstems-tests\dashboards\explores_views_repo\script_01-extracting_looker_tables_from_views_and_models.csv"
OUTPUT_CSV = "script_01-extracting_looker_explores_from_models.csv"

# Define desired column output in new order
fieldnames = [
    "lkml_file",
    "model_name",
    "explore_name",
    "sql_table_names",
    "derived_table_sources"
]

explore_rows = []

with open(INPUT_CSV, mode="r", encoding="utf-8") as infile:
    reader = csv.DictReader(infile)
    for row in reader:
        if row["lkml_file"].lower().endswith(".model.lkml"):
            explore_rows.append({
                "lkml_file": row["lkml_file"],
                "model_name": row["model_name"],
                "explore_name": row["view_or_model_name"],
                "sql_table_names": row["sql_table_name"],
                "derived_table_sources": row["derived_table_sources"]
            })

# === WRITE OUTPUT ===
with open(OUTPUT_CSV, mode="w", newline="", encoding="utf-8") as outfile:
    writer = csv.DictWriter(outfile, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(explore_rows)

# === DUPLICATE CHECKS ===
explore_name_counts = Counter([row["explore_name"] for row in explore_rows])
model_explore_counts = Counter([(row["model_name"], row["explore_name"]) for row in explore_rows])

duplicate_explores = [k for k, v in explore_name_counts.items() if v > 1]
duplicate_model_explore = [k for k, v in model_explore_counts.items() if v > 1]

# === SUMMARY ===
print(f"\n‚úÖ Filtered explore list saved to: {OUTPUT_CSV}")
print(f"üìÑ Total explores written: {len(explore_rows)}")

if duplicate_explores:
    print(f"‚ö†Ô∏è Duplicate explore_name values found: {len(duplicate_explores)}")
    for name in duplicate_explores:
        print(f"   - {name}")
else:
    print("‚úÖ No duplicate explore_name values found.")

if duplicate_model_explore:
    print(f"‚ö†Ô∏è Duplicate (model_name, explore_name) pairs found: {len(duplicate_model_explore)}")
    for pair in duplicate_model_explore:
        print(f"   - {pair}")
else:
    print("‚úÖ No duplicate (model_name, explore_name) pairs found.")
